<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Middle tier application context definition for Spring Bank Application.
  -->
  <beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:jee="http://www.springframework.org/schema/jee"		
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
				http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

	<!-- Datasource for Hibernate Session Factory
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>com.ibm.db2.jcc.DB2Driver</value></property>
		<property name="url"><value>jdbc:db2://localhost:50000/BANK</value></property>
		<property name="username"><value>is95592</value></property>
		<property name="password"><value>962213</value></property>
	</bean>
	 -->
	 
	<!-- JNDI DataSource for JEE environments -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/SpringBankDS"/>
	
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingResources">
			<list>
				<value>com/springbank/entity/Account.hbm.xml</value>
				<value>com/springbank/entity/Operator.hbm.xml</value>
				<value>com/springbank/entity/Customer.hbm.xml</value>				
			</list>
		</property>		
		<property name="hibernateProperties">		
		<props>
			<prop key="hibernate.dialect">org.hibernate.dialect.DB2Dialect</prop>
			<prop key="hibernate.default_schema">IS95592</prop>			
			<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
			<prop key="hibernate.connection.pool_size">1</prop>
			<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			<prop key="hibernate.cache.use_query_cache">true</prop>						
			<prop key="hibernate.cache.use_minimal_puts">true</prop>
			<prop key="hibernate.max_fetch_depth">1</prop>
			<prop key="hibernate.show_sql">false</prop>									
			<prop key="hibernate.format_sql">false</prop>
			<prop key="hibernate.use_sql_comments">false</prop>
			<prop key="hibernate.transaction.flush_before_completion">true</prop>
			<prop key="hibernate.transaction.auto_close_session">true</prop>	
		</props>
		</property>
	</bean>	

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<!-- bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean -->
	
	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<!-- bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/ -->
	
	<!-- Transaction manager that delegates to Websphere (for a transactional JNDI DataSource) -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.WebSphereUowTransactionManager"/>
	 
	<!-- Transaction advice for core services -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- Transaction config for core services -->
	<aop:config>
		<aop:pointcut id="transactionServiceOperation" expression="execution(* com.springbank.service.core.*Service.*(..))"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionServiceOperation"/>
	</aop:config>	
	
	
	
	<!-- Logging aspect bean for core services -->
	<bean id="loggingAspect" class="com.springbank.aspect.LoggingAspect">
	</bean>

	<!-- Logging aspect config for core services -->	
	<aop:config>	
		<aop:aspect ref="loggingAspect">	
			<aop:pointcut id="loggingServiceOperation" expression="execution(* com.springbank.service.core.*Service.*(..))"/>	       
			<aop:after-throwing pointcut-ref="loggingServiceOperation" throwing="ex" method="doAfterThrowingLog"/>	  
	  </aop:aspect>	
	</aop:config>



    <!-- Persistence manager -->
	<bean id="persistenceManager" class="com.springbank.service.persistence.PersistenceManagerImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- Authentication service -->
	<bean id="authenticationService" class="com.springbank.service.core.AuthenticationServiceImpl">
		<property name="persistenceManager" ref="persistenceManager"/>
	</bean>
	
	<!-- Banking service -->
	<bean id="bankingService" class="com.springbank.service.core.BankingServiceImpl">
		<property name="persistenceManager" ref="persistenceManager"/>
	</bean>	
	
	
	
    <!-- MessageFactory -->
    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    
    <!-- Marshaller -->
    <bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation" value="/WEB-INF/mapping/castor-mapping.xml"/>
    </bean>
    
	<!-- WebService Template -->
    <bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
        <constructor-arg ref="messageFactory"/>
        <property name="defaultUri" value="http://localhost:9081/SpringBank/WS/SearchCustomerWS"/>
        <property name="marshaller" ref="marshaller" />  
        <property name="unmarshaller" ref="marshaller" />          
    </bean>	
  
</beans>